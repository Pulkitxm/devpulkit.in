name: Deploy Images to GHCR

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  push-store-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get commit info
        id: commit
        run: |
          echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
          # Get commit message and sanitize it for tag use (remove spaces and special chars)
          commit_msg=$(git log -1 --pretty=%B | head -n1 | tr -dc '[:alnum:]-_' | tr '[:upper:]' '[:lower:]')
          # Truncate to 50 chars max
          commit_msg="${commit_msg:0:50}"
          echo "message=$commit_msg" >> $GITHUB_OUTPUT

      - name: Prepare metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=long
            type=raw,value=${{ steps.commit.outputs.date }}
            type=raw,value=${{ steps.commit.outputs.message }}
            type=ref,event=tag

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max